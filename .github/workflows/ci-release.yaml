name: CI

on:
  pull_request:
    branches:
      - master
      - main
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - closed

concurrency:
  cancel-in-progress: true
  group: ${{ github.head_ref }}

jobs:
  bump:
    name: 'Release bump'
    runs-on: ubuntu-latest

    # Useful for blocking merges
    # See: https://github.com/nahuelhds/ci-semver-gitflow-actions/settings/environments
    environment: ci

    permissions:
      contents: write

    outputs:
      version: ${{ steps.version-bump.outputs.newTag  }}

    steps:
      - name: 'Parse version type'
        id: version-type
        run: |
          if [[ ${{ github.head_ref }} =~ ^release/major-.*$ ]]; then
            echo "value=major" >> $GITHUB_OUTPUT
            echo "MAJOR version detected"
          else
            echo "value=minor" >> $GITHUB_OUTPUT
            echo "default to MINOR version"
          fi

      - name: 'Checkout source code'
        uses: 'actions/checkout@v4'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: 'Bump version'
        id: version-bump
        uses: 'nahuelhds/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target-branch: ${{github.event.pull_request.merged == true && github.base_ref || '' }}
          # See: https://github.com/phips28/gh-action-bump-version?tab=readme-ov-file#usage
          bump-policy: 'ignore'
          # If the PR is merged, then minor: 1.0.0 -> 1.1.0
          # If it has been opened, then pre-minor: 1.0.0 -> 1.1.0-rc.0
          # Otherwise, pre-release: 1.1.0-rc.0 -> 1.1.0-rc.1
          version-type: ${{ github.event.pull_request.merged == true && steps.version-type.outputs.value || github.event.action == 'opened' && format('pre{0}', steps.version-type.outputs.value) || 'prerelease' }}
          # Use skip-tag if you create the tag in another step of your workflow
          # skip-tag: 'true'

      - name: "cat package.json"
        run: cat package.json

      - name: 'Output Step'
        run: |
          echo TAG: ${{ steps.version-bump.outputs.newTag }}

  build:
    needs: bump
    name: "Build ${{ needs.bump.outputs.version }}"
    runs-on: ubuntu-latest
    steps:
      - name: 'Version built: ${{ needs.bump.outputs.version }}'
        run: |
          echo TAG: ${{ needs.bump.outputs.version }}

  clean-tags:
    if: ${{ github.event.pull_request.merged == true }}
    needs:
      - bump
      - build
    name: "Clean tags"
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0

      - name: Clean "${{ needs.bump.outputs.version }}-*" tags
        run: |
          git tag | grep ${{ needs.bump.outputs.version }}- | xargs -n 1 -I% git push origin :refs/tags/%

  pr-to-develop:
    if: ${{ github.event.pull_request.merged == true }}
    needs:
      - bump
      - build

    name: "PR to default branch"
    runs-on: ubuntu-latest

    permissions: write-all

    steps:
      - name: Checkout source code
        uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0

      - name: Create PR to ${{ github.event.repository.default_branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # Reference: https://cli.github.com/manual/gh_pr_create
        run: |
          gh pr create --title "Backport ${{ needs.bump.outputs.version }} to ${{ github.event.repository.default_branch }}" --body "Backport for #${{ github.event.pull_request.number }}" --base ${{ github.event.repository.default_branch }}
